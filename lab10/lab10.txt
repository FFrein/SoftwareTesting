#Lab10 - PageObject. Далее у нас идет “трансграничная” лаба. 
У нее не будет дедлайна на сдачу, только дедлайн на выполнение. 
Вы можете показать ее как вместе с #Lab9 (если быстро 
разберетесь с локаторами), так отдельно саму лабу и пересдать 
какие-то прошлые вместе с ней, ну и вместе с #Lab11, #Lab12. 
Главное - выполните в отдельном проекте, чтобы была видна 
дата исполнения. 

Касательно самого задания, лабораторная “PageObject” у нас 
следующая:
1. Пересматриваете курс “WebDriver” - 
https://learn.epam.com/detailsPage?id=93e65671-c99b-42d7-ae15-f77a60cdfa53
 Там у вас последней темой рассказывается про PageObject. 
Даже если выбирали путь другого языка - сходите посмотрите 
Java. Концепт одинаковый для любого языка, в котором можно 
писать в парадигмах ООП.

2. В помощь вам идёт книга - 
https://comaqa.gitbook.io/selenium-webdriver-lectures/
, конкретно раздел “Page Object Pattern. Архитектура 
тестового проекта.”

3. Выполняете следующее задание на любом из языков 
Java/.NET/JS (или любой другой, если договоритесь заранее): 
     1. Создаете новый проект, за основу берете уже 
	написанный вами код из #Lab9  с ранее автоматизированным 
	тест-кейсом и переводите его на паттерн Page Object.
     2. Выбираете ещё один из ранее написанных вами 
	мануальных тестов и автоматизируете его в условиях 
	нового подхода. Старайтесь выбрать тест средней 
	сложности, чтобы столкнуться с определенным уровнем 
	сложности и решить эти вопросы как можно раньше.

Ваша задача - научиться работать с паттерном PageObject, 
соблюдать правила построения логики и основ работы с данным 
паттерном. Не забывайте, про работу над своими локаторами и 
пишите корректные ассерты. 

Важный момент: ваши тесты с браузером должны запускаться на 
вашем CI. Без успешного исполняемого на вашем CI кода, 
максимальная оценка - “4”.

Дедлайн выполнения задания (крайнее время, когда коммиты 
должны оказаться в репозитории) - 9 декабря, 23.59.
Если задание не выполнено к озвученной дате, оценка - “1”.

#Lab11 - Framework Part 1. Architecture, #Lab12 Framework 
Part 2. Tests и #Lab13 - Additional challenges

Не беспокойтесь, фактически #Lab11 и #Lab12 - это одно 
задание, просто оно будет оценено с разных позиций. Назовем 
его сверхлабораторной “Framework”, и вы должны будете сделать 
следующее:
1. Просматриваете курс “Framework” - 
https://learn.epam.com/detailsPage?id=95113203-9b7b-4a6f-8cfe-f488d657de7a
Внимание: практические задания из курса здесь к выполнению 
опциональны, они лишь помогут вам чуть лучше разобраться в 
написании кода. Как по мне, в условиях ограниченного времени, 
лучше попробуйте сконцентрироваться на своём коде и напишите 
2-3 итерации.

2. Не забывайте про книгу - 
https://comaqa.gitbook.io/selenium-webdriver-lectures/

3. Помните, что ваш код должен соблюдать принципы чистого 
кода:

1. Курс “Clean Code”. - https://learn.epam.com/detailsPage?id=1ad7fd02-311b-4b96-845d-599b177ad928 
2. Текстовый источник: https://refactoring.guru
4. Выполняете следующее задание на любом из языков Java/.NET/JS 
(или любой другой, если договорились заранее): 
     1. Переводите уже написанный вами код из #Lab10 с двумя 
ранее автоматизированными тест-кейсами с “чистого” паттерна 
PageObject на подход Framework в соотвествии с определениями, 
рассказанными в курсе: начиная от браузер менеджера, 
заканчивая логированием.
     2. По итогам пункта один вы получите так называемое 
“ядро” фреймворка. Теперь, вы автоматизируете оставшиеся 
мануальные тест кейсы, используя и расширяя это ядро.

Оцениваться ваша работа будет следующим образом:
1. Fr Part 1. Сюда ставится оценка за ваши “архитектурные” 
решения: слои, инструменты (например, логирование) и качество 
их построения. Возникшие проблемы в написании страниц, 
локаторов и работы с браузером будут учитываться здесь.

2. Fr Part 2. Здесь оценивается логика, качество, 
лаконичность и количество автоматизированных вами тестов. 
Итого, неплохо сделали 3-4 теста - получили до “3”-“4” баллов.
Сделали хорошо 10 - максимальная оценка “10”.
